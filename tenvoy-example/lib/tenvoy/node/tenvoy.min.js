const openpgp=require("../openpgpjs/dist/openpgp.js"),nacl=require("../tweetnacljs/nacl.js"),sha256=require("../fast-sha256-js");var TogaTech={};function tEnvoy(e=openpgp,t=nacl,r=sha256){let y=e,l=t,i=r;this.dictionary="abandon ability able about above absent absorb abstract absurd abuse access accident account accuse achieve acid acoustic acquire across act action actor actress actual adapt add addict address adjust admit adult advance advice aerobic affair afford afraid again age agent agree ahead aim air airport aisle alarm album alcohol alert alien all alley allow almost alone alpha already also alter always amateur amazing among amount amused analyst anchor ancient anger angle angry animal ankle announce annual another answer antenna antique anxiety any apart apology appear apple approve april arch arctic area arena argue arm armed armor army around arrange arrest arrive arrow art artefact artist artwork ask aspect assault asset assist assume asthma athlete atom attack attend attitude attract auction audit august aunt author auto autumn average avocado avoid awake aware away awesome awful awkward axis baby bachelor bacon badge bag balance balcony ball bamboo banana banner bar barely bargain barrel base basic basket battle beach bean beauty because become beef before begin behave behind believe below belt bench benefit best betray better between beyond bicycle bid bike bind biology bird birth bitter black blade blame blanket blast bleak bless blind blood blossom blouse blue blur blush board boat body boil bomb bone bonus book boost border boring borrow boss bottom bounce box boy bracket brain brand brass brave bread breeze brick bridge brief bright bring brisk broccoli broken bronze broom brother brown brush bubble buddy budget buffalo build bulb bulk bullet bundle bunker burden burger burst bus business busy butter buyer buzz cabbage cabin cable cactus cage cake call calm camera camp can canal cancel candy cannon canoe canvas canyon capable capital captain car carbon card cargo carpet carry cart case cash casino castle casual cat catalog catch category cattle caught cause caution cave ceiling celery cement census century cereal certain chair chalk champion change chaos chapter charge chase chat cheap check cheese chef cherry chest chicken chief child chimney choice choose chronic chuckle chunk churn cigar cinnamon circle citizen city civil claim clap clarify claw clay clean clerk clever click client cliff climb clinic clip clock clog close cloth cloud clown club clump cluster clutch coach coast coconut code coffee coil coin collect color column combine come comfort comic common company concert conduct confirm congress connect consider control convince cook cool copper copy coral core corn correct cost cotton couch country couple course cousin cover coyote crack cradle craft cram crane crash crater crawl crazy cream credit creek crew cricket crime crisp critic crop cross crouch crowd crucial cruel cruise crumble crunch crush cry crystal cube culture cup cupboard curious current curtain curve cushion custom cute cycle dad damage damp dance danger daring dash daughter dawn day deal debate debris decade december decide decline decorate decrease deer defense define defy degree delay deliver demand demise denial dentist deny depart depend deposit depth deputy derive describe desert design desk despair destroy detail detect develop device devote diagram dial diamond diary dice diesel diet differ digital dignity dilemma dinner dinosaur direct dirt disagree discover disease dish dismiss disorder display distance divert divide divorce dizzy doctor document dog doll dolphin domain donate donkey donor door dose double dove draft dragon drama drastic draw dream dress drift drill drink drip drive drop drum dry duck dumb dune during dust dutch duty dwarf dynamic eager eagle early earn earth easily east easy echo ecology economy edge edit educate effort egg eight either elbow elder electric elegant element elephant elevator elite else embark embody embrace emerge emotion employ empower empty enable enact end endless endorse enemy energy enforce engage engine enhance enjoy enlist enough enrich enroll ensure enter entire entry envelope episode equal equip era erase erode erosion error erupt escape essay essence estate eternal ethics evidence evil evoke evolve exact example excess exchange excite exclude excuse execute exercise exhaust exhibit exile exist exit exotic expand expect expire explain expose express extend extra eye eyebrow fabric face faculty fade faint faith fall false fame family famous fan fancy fantasy farm fashion fat fatal father fatigue fault favorite feature february federal fee feed feel female fence festival fetch fever few fiber fiction field figure file film filter final find fine finger finish fire firm first fiscal fish fit fitness fix flag flame flash flat flavor flee flight flip float flock floor flower fluid flush fly foam focus fog foil fold follow food foot force forest forget fork fortune forum forward fossil foster found fox fragile frame frequent fresh friend fringe frog front frost frown frozen fruit fuel fun funny furnace fury future gadget gain galaxy gallery game gap garage garbage garden garlic garment gas gasp gate gather gauge gaze general genius genre gentle genuine gesture ghost giant gift giggle ginger giraffe girl give glad glance glare glass glide glimpse globe gloom glory glove glow glue goat goddess gold good goose gorilla gospel gossip govern gown grab grace grain grant grape grass gravity great green grid grief grit grocery group grow grunt guard guess guide guilt guitar gun gym habit hair half hammer hamster hand happy harbor hard harsh harvest hat have hawk hazard head health heart heavy hedgehog height hello helmet help hen hero hidden high hill hint hip hire history hobby hockey hold hole holiday hollow home honey hood hope horn horror horse hospital host hotel hour hover hub huge human humble humor hundred hungry hunt hurdle hurry hurt husband hybrid ice icon idea identify idle ignore ill illegal illness image imitate immense immune impact impose improve impulse inch include income increase index indicate indoor industry infant inflict inform inhale inherit initial inject injury inmate inner innocent input inquiry insane insect inside inspire install intact interest into invest invite involve iron island isolate issue item ivory jacket jaguar jar jazz jealous jeans jelly jewel job join joke journey joy judge juice jump jungle junior junk just kangaroo keen keep ketchup key kick kid kidney kind kingdom kiss kit kitchen kite kitten kiwi knee knife knock know lab label labor ladder lady lake lamp language laptop large later latin laugh laundry lava law lawn lawsuit layer lazy leader leaf learn leave lecture left leg legal legend leisure lemon lend length lens leopard lesson letter level liar liberty library license life lift light like limb limit link lion liquid list little live lizard load loan lobster local lock logic lonely long loop lottery loud lounge love loyal lucky luggage lumber lunar lunch luxury lyrics machine mad magic magnet maid mail main major make mammal man manage mandate mango mansion manual maple marble march margin marine market marriage mask mass master match material math matrix matter maximum maze meadow mean measure meat mechanic medal media melody melt member memory mention menu mercy merge merit merry mesh message metal method middle midnight milk million mimic mind minimum minor minute miracle mirror misery miss mistake mix mixed mixture mobile model modify mom moment monitor monkey monster month moon moral more morning mosquito mother motion motor mountain mouse move movie much muffin mule multiply muscle museum mushroom music must mutual myself mystery myth naive name napkin narrow nasty nation nature near neck need negative neglect neither nephew nerve nest net network neutral never news next nice night noble noise nominee noodle normal north nose notable note nothing notice novel now nuclear number nurse nut oak obey object oblige obscure observe obtain obvious occur ocean october odor off offer office often oil okay old olive olympic omit once one onion online only open opera opinion oppose option orange orbit orchard order ordinary organ orient original orphan ostrich other outdoor outer output outside oval oven over own owner oxygen oyster ozone pact paddle page pair palace palm panda panel panic panther paper parade parent park parrot party pass patch path patient patrol pattern pause pave payment peace peanut pear peasant pelican pen penalty pencil people pepper perfect permit person pet phone photo phrase physical piano picnic picture piece pig pigeon pill pilot pink pioneer pipe pistol pitch pizza place planet plastic plate play please pledge pluck plug plunge poem poet point polar pole police pond pony pool popular portion position possible post potato pottery poverty powder power practice praise predict prefer prepare present pretty prevent price pride primary print priority prison private prize problem process produce profit program project promote proof property prosper protect proud provide public pudding pull pulp pulse pumpkin punch pupil puppy purchase purity purpose purse push put puzzle pyramid quality quantum quarter question quick quit quiz quote rabbit raccoon race rack radar radio rail rain raise rally ramp ranch random range rapid rare rate rather raven raw razor ready real reason rebel rebuild recall receive recipe record recycle reduce reflect reform refuse region regret regular reject relax release relief rely remain remember remind remove render renew rent reopen repair repeat replace report require rescue resemble resist resource response result retire retreat return reunion reveal review reward rhythm rib ribbon rice rich ride ridge rifle right rigid ring riot ripple risk ritual rival river road roast robot robust rocket romance roof rookie room rose rotate rough round route royal rubber rude rug rule run runway rural sad saddle sadness safe sail salad salmon salon salt salute same sample sand satisfy satoshi sauce sausage save say scale scan scare scatter scene scheme school science scissors scorpion scout scrap screen script scrub sea search season seat second secret section security seed seek segment select sell seminar senior sense sentence series service session settle setup seven shadow shaft shallow share shed shell sheriff shield shift shine ship shiver shock shoe shoot shop short shoulder shove shrimp shrug shuffle shy sibling sick side siege sight sign silent silk silly silver similar simple since sing siren sister situate six size skate sketch ski skill skin skirt skull slab slam sleep slender slice slide slight slim slogan slot slow slush small smart smile smoke smooth snack snake snap sniff snow soap soccer social sock soda soft solar soldier solid solution solve someone song soon sorry sort soul sound soup source south space spare spatial spawn speak special speed spell spend sphere spice spider spike spin spirit split spoil sponsor spoon sport spot spray spread spring spy square squeeze squirrel stable stadium staff stage stairs stamp stand start state stay steak steel stem step stereo stick still sting stock stomach stone stool story stove strategy street strike strong struggle student stuff stumble style subject submit subway success such sudden suffer sugar suggest suit summer sun sunny sunset super supply supreme sure surface surge surprise surround survey suspect sustain swallow swamp swap swarm swear sweet swift swim swing switch sword symbol symptom syrup system table tackle tag tail talent talk tank tape target task taste tattoo taxi teach team tell ten tenant tennis tent term test text thank that theme then theory there they thing this thought three thrive throw thumb thunder ticket tide tiger tilt timber time tiny tip tired tissue title toast tobacco today toddler toe together toilet token tomato tomorrow tone tongue tonight tool tooth top topic topple torch tornado tortoise toss total tourist toward tower town toy track trade traffic tragic train transfer trap trash travel tray treat tree trend trial tribe trick trigger trim trip trophy trouble truck true truly trumpet trust truth try tube tuition tumble tuna tunnel turkey turn turtle twelve twenty twice twin twist two type typical ugly umbrella unable unaware uncle uncover under undo unfair unfold unhappy uniform unique unit universe unknown unlock until unusual unveil update upgrade uphold upon upper upset urban urge usage use used useful useless usual utility vacant vacuum vague valid valley valve van vanish vapor various vast vault vehicle velvet vendor venture venue verb verify version very vessel veteran viable vibrant vicious victory video view village vintage violin virtual virus visa visit visual vital vivid vocal voice void volcano volume vote voyage wage wagon wait walk wall walnut want warfare warm warrior wash wasp waste water wave way wealth weapon wear weasel weather web wedding weekend weird welcome west wet whale what wheat wheel when where whip whisper wide width wife wild will win window wine wing wink winner winter wire wisdom wise wish witness wolf woman wonder wood wool word work world worry worth wrap wreck wrestle wrist write wrong yard year yellow you young youth zebra zero zone zoo",this.wordsList=this.dictionary.split(" "),Object.defineProperty(this,"version",{get:()=>"v7.0.0"}),this.core={},Object.defineProperty(this.core,"openpgp",{get:()=>y}),Object.defineProperty(this.core,"nacl",{get:()=>l}),Object.defineProperty(this.core,"sha256",{get:()=>i}),this.util={},this.util.utf8encode=e=>{if(null==e)throw"tEnvoy Fatal Error: argument string of method util.utf8encode is required and does not have a default value.";return y.util.encode_utf8(e)},this.util.utf8decode=e=>{if(null==e)throw"tEnvoy Fatal Error: argument bytes of method util.utf8decode is required and does not have a default value.";return e instanceof Uint8Array||(e=this.util.mixedToUint8Array(e,!1)),y.util.decode_utf8(e)},this.util.stringToBytes=e=>{if(null==e)throw"tEnvoy Fatal Error: argument string of method util.stringToBytes is required and does not have a default value.";return y.util.str_to_Uint8Array(e)},this.util.bytesToString=e=>{if(null==e)throw"tEnvoy Fatal Error: argument bytes of method util.bytesToString is required and does not have a default value.";return e instanceof Uint8Array||(e=this.util.mixedToUint8Array(e,!1)),y.util.Uint8Array_to_str(e)},this.util.stringToHex=r=>{if(null==r)throw"tEnvoy Fatal Error: argument string of method util.stringToHex is required and does not have a default value.";let a="";for(let t=0;t<r.length;t++){let e=r.charCodeAt(t).toString(16);for(;e.length<2;)e="0"+e;a+=e}return a},this.util.hexToString=t=>{if(null==t)throw"tEnvoy Fatal Error: argument hex of method util.hexToString is required and does not have a default value.";let r="";for(let e=0;e<t.length;e+=2)r+=String.fromCharCode(parseInt(t.substring(e,e+2),16));return r},this.util.bytesToHex=t=>{if(null==t)throw"tEnvoy Fatal Error: argument bytes of method util.bytesToHex is required and does not have a default value.";t instanceof Uint8Array||(t=this.util.mixedToUint8Array(t,!1));let r="";for(let e=0;e<t.length;e++)0==t[e].toString(16).length?r+="00":1==t[e].toString(16).length?r+="0"+t[e].toString(16):r+=t[e].toString(16);return r},this.util.hexToBytes=t=>{if(null==t)throw"tEnvoy Fatal Error: argument hex of method util.hexToBytes is required and does not have a default value.";let r=new Uint8Array(t.length/2);for(let e=0;e<t.length;e+=2)r[e/2]=parseInt(t.substring(e,e+2),16);return r},this.util.arrayDeepCopy=t=>{if(null==t)throw"tEnvoy Fatal Error: argument array of method util.arrayDeepCopy is required and does not have a default value.";let r;if(t instanceof Uint8Array)r=new Uint8Array(t.length);else{if(!(t instanceof Array))throw"tEnvoy Fatal Error: argument array of method util.arrayDeepCopy is invalid, array must be of type Uint8Array or Array.";r=new Array(t.length)}for(let e=0;e<t.length;e++)r[e]=t[e];return r},this.util.compareConstant=(t,r)=>{if(null==t)throw"tEnvoy Fatal Error: argument inputted of method util.compareConstant is required and does not have a default value.";if(null==r)throw"tEnvoy Fatal Error: argument original of method util.compareConstant is required and does not have a default value.";let a=!0;for(let e=0;e<t.length;e++)(e>=r.length||t[e]!=r[e])&&(a=!1);return t.length!=r.length&&(a=!1),a},this.util.mixedToUint8Array=(r,t=!1,a=null)=>{if(null==r)return r;var i=(r,e)=>{if(r.length==e||null==e)return r;if(r.length>e){let t=new Uint8Array(e);for(let e=0;e<t.length;e++)t[e]=r[e];return t}{let t=new Uint8Array(e);for(let e=0;e<t.length;e++)t[e]=255;for(let e=0;e<r.length;e++)t[t.length-r.length+e]=r[e];return t}};if(null==r)throw"tEnvoy Fatal Error: argument mixed of method util.mixedToUint8Array is required and does not have a default value.";if(r instanceof Uint8Array){if(t){let t=new Uint8Array(r.length+1);for(let e=t[0]=0;e<r.length;e++)t[e+1]=r[e];return i(t,a)}return r}if(r instanceof Array&&(t=>{for(let e=0;e<t.length;e++)if("number"!=typeof t[e]||!Number.isInteger(t[e])||t[e]<0||255<t[e])return!1;return!0})(r)){if(t){let t=new Uint8Array(r.length+1);t[0]=1;for(let e=0;e<r.length;e++)t[e+1]=r[e];return i(t,a)}{let t=new Uint8Array(r.length);for(let e=0;e<r.length;e++)t[e]=r[e];return t}}if("number"==typeof r){if(Number.isInteger(r)){if(0<r){let e=r.toString(16);e.length%2!=0&&(e="0"+e),0==e.length&&(e="00");var o=this.util.hexToBytes(e);if(t){let t=new Uint8Array(o.length+1);t[0]=2;for(let e=0;e<o.length;e++)t[e+1]=o[e];return i(t,a)}{let t=new Uint8Array(o.length);for(let e=0;e<o.length;e++)t[e]=o[e];return t}}if(r<0){let e=(r=-r).toString(16);e.length%2!=0&&(e="0"+e),0==e.length&&(e="00");var n=this.util.hexToBytes(e);if(t){let t=new Uint8Array(n.length+1);t[0]=3;for(let e=0;e<n.length;e++)t[e+1]=n[e];return i(t,a)}{let t=new Uint8Array(n.length);for(let e=0;e<n.length;e++)t[e]=n[e];return t}}if(t){let e=new Uint8Array(2);return e[0]=4,e[1]=0,i(e,a)}{let e=new Uint8Array(1);return e[0]=0,e}}if(Number.isNaN(r)){if(t){let e=new Uint8Array(2);return e[0]=7,e[1]=0,i(e,a)}{let e=new Uint8Array(1);return e[0]=0,e}}if(Number.isFinite(r)){if(t){let e=this.util.pack(r+"");return e[0]=8,i(e,a)}return this.util.mixedToUint8Array(r+"",!1)}if(t){let e=new Uint8Array(2);return e[0]=9,e[1]=255,i(e,a)}{let e=new Uint8Array(1);return e[0]=255,e}}if(r.constructor==Object||r.constructor==Array||"function"==typeof r.toJSON){var s=this.util.utf8encode(JSON.stringify(r));if(t){let t=new Uint8Array(s.length+1);t[0]=5;for(let e=0;e<s.length;e++)t[e+1]=s[e];return i(t,a)}return s}if("boolean"==typeof r){if(t){let e=new Uint8Array(2);return e[0]=6,e[1]=r?1:0,i(e,a)}{let e=new Uint8Array(1);return e[0]=r?1:0,e}}var l=this.util.utf8encode(r.toString());if(t){let t=new Uint8Array(l.length+1);t[0]=254;for(let e=0;e<l.length;e++)t[e+1]=l[e];return i(t,a)}return l},this.util.uint8ArrayToMixed=(n,e=!1)=>{if(null==n)return null;if(e){let t=!1,r=0;for(let e=0;e<n.length;e++)255==n[e]||t||(t=!0,r=e);let a,i=new Uint8Array(r);if(t){a=new Uint8Array(n.length-r);for(let e=r;e<n.length;e++)a[e-r]=n[e];null!=l&&(i=l.randomBytes(r))}else a=n,null!=l&&(i=l.randomBytes(l.randomBytes(1)[0]%16));n=a;let o=new Uint8Array(n.length-1);for(let e=0;e<o.length;e++)o[e]=n[e+1];if(1==n[0]){let t=[];for(let e=0;e<o.length;e++)t[e]=o[e];let r=[];for(let e=0;e<i.length;e++)r[e]=i[e];return t}if(2==n[0]){var s=this.util.bytesToHex(o);this.util.bytesToHex(i);return parseInt(s,16)}if(3==n[0]){s=this.util.bytesToHex(o),parseInt(this.util.bytesToHex(i),16);return-1*parseInt(s,16)}if(4==n[0])return n[1];if(5==n[0]){this.util.utf8decode(i),JSON.parse("{}");return JSON.parse(this.util.utf8decode(o))}if(6==n[0])return 0!=o[0];if(7==n[0])return NaN;if(8==n[0]){this.util.utf8decode(i);return parseFloat(this.util.utf8decode(o))}if(9==n[0])return 1/0;if(254!=n[0])return o;this.util.utf8decode(i);return this.util.utf8decode(o)}{let t=[];for(let e=0;e<n.length;e++)t[e]=n[e];return t}},this.util.pack=(e,t)=>this.util.mixedToUint8Array(e,!0,t),this.util.unpack=e=>this.util.uint8ArrayToMixed(e,!0),this.util.objectEquals=(e,t)=>{return(()=>{var e,t,a,i;let o=(e,t)=>{if(isNaN(e)&&isNaN(t)&&"number"==typeof e&&"number"==typeof t)return!0;if(e===t)return!0;if("function"==typeof e&&"function"==typeof t||e instanceof Date&&t instanceof Date||e instanceof RegExp&&t instanceof RegExp||e instanceof String&&t instanceof String||e instanceof Number&&t instanceof Number)return e.toString()===t.toString();if(!(e instanceof Object&&t instanceof Object))return!1;if(e.isPrototypeOf(t)||t.isPrototypeOf(e))return!1;if(e.constructor!==t.constructor)return!1;if(e.prototype!==t.prototype)return!1;if(-1<a.indexOf(e)||-1<i.indexOf(t))return!1;for(var r in t){if(t.hasOwnProperty(r)!==e.hasOwnProperty(r))return!1;if(typeof t[r]!=typeof e[r])return!1}for(r in e){if(t.hasOwnProperty(r)!==e.hasOwnProperty(r))return!1;if(typeof t[r]!=typeof e[r])return!1;switch(typeof e[r]){case"object":case"function":if(a.push(e),i.push(t),!o(e[r],t[r]))return!1;a.pop(),i.pop();break;default:if(e[r]!==t[r])return!1}}return!0};if(arguments.length<1)throw"need two or more arguments to compare";for(e=1,t=arguments.length;e<t;e++)if(a=[],i=[],!o(arguments[0],arguments[e]))return!1;return!0})()},this.util.fixArmor=e=>{for(e=e.replace("Version: OpenPGP.js v4.10.10","Version: tEnvoy "+this.version).replace("Comment: https://openpgpjs.org","Comment: https://togatech.org/ (TogaTech tEnvoy)");"-"!=e[0];)e=e.substring(1);return e},this.hash=(e,t="sha256")=>{if("function"==typeof this.hash[t=null==t?"sha256":t])return this.hash[t](e);throw"tEnvoy Fatal Error: argument mixed of method hash is invalid."},this.hash.sha256=r=>new Promise(async(e,t)=>{null==r&&t("tEnvoy Fatal Error: argument mixed of method hash.sha256 is required and does not have a default value."),e(this.util.stringToHex(this.util.bytesToString(await y.crypto.hash.sha256(this.util.mixedToUint8Array(r,!1)).catch(e=>{t(e)}))))}),this.hash.sha1=r=>new Promise(async(e,t)=>{null==r&&t("tEnvoy Fatal Error: argument mixed of method hash.sha1 is required and does not have a default value."),e(this.util.stringToHex(this.util.bytesToString(await y.crypto.hash.sha1(this.util.mixedToUint8Array(r,!1)).catch(e=>{t(e)}))))}),this.hash.sha224=r=>new Promise(async(e,t)=>{null==r&&t("tEnvoy Fatal Error: argument mixed of method hash.sha224 is required and does not have a default value."),e(this.util.stringToHex(this.util.bytesToString(await y.crypto.hash.sha224(this.util.mixedToUint8Array(r,!1)).catch(e=>{t(e)}))))}),this.hash.sha384=r=>new Promise(async(e,t)=>{null==r&&t("tEnvoy Fatal Error: argument mixed of method hash.sha384 is required and does not have a default value."),e(this.util.stringToHex(this.util.bytesToString(await y.crypto.hash.sha384(this.util.mixedToUint8Array(r,!1)).catch(e=>{t(e)}))))}),this.hash.sha512=r=>new Promise(async(e,t)=>{null==r&&t("tEnvoy Fatal Error: argument mixed of method hash.sha512 is required and does not have a default value."),e(this.util.stringToHex(this.util.bytesToString(await y.crypto.hash.sha512(this.util.mixedToUint8Array(r,!1)).catch(e=>{t(e)}))))}),this.hash.md5=r=>new Promise(async(e,t)=>{null==r&&t("tEnvoy Fatal Error: argument mixed of method hash.md5 is required and does not have a default value."),e(this.util.stringToHex(this.util.bytesToString(await y.crypto.hash.md5(this.util.mixedToUint8Array(r,!1)).catch(e=>{t(e)}))))}),this.hash.ripemd160=r=>new Promise(async(e,t)=>{null==r&&t("tEnvoy Fatal Error: argument mixed of method hash.ripemd160 is required and does not have a default value."),e(this.util.stringToHex(this.util.bytesToString(await y.crypto.hash.ripemd(this.util.mixedToUint8Array(r,!1)).catch(e=>{t(e)}))))}),this.random={},this.random.bytes=(r=1)=>new Promise(async(e,t)=>{null==r&&(r=1),r=isNaN(parseInt(r))?0:parseInt(r),e(await y.crypto.random.getRandomBytes(r).catch(e=>{t(e)}))}),this.random.number=(r=0,a=1)=>new Promise(async(e,t)=>{null==r&&(r=0),r=isNaN(parseFloat(r))?0:parseFloat(r),null==a&&(a=0),a=isNaN(parseFloat(a))?0:parseFloat(a),e((await this.random.bytes(1).catch(e=>{t(e)}))[0]/255*(a-r)+r)}),this.random.string=(i=10)=>new Promise(async(e,t)=>{null==i&&(i=10),i=isNaN(parseInt(i))?10:parseInt(i);let r="";var a="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";for(let e=0;e<i;e++)r+=a.charAt(Math.floor(await this.random.number(0,a.length-1).catch(e=>{t(e)})));e(r)}),this.random.words=(a=12)=>new Promise(async(e,t)=>{null==a&&(a=12),a=isNaN(parseInt(a))?12:parseInt(a);let r="";for(let e=0;e<a;e++)r+=this.wordsList[Math.floor(await this.random.number(0,2047).catch(e=>{t(e)}))],e+1!=a&&(r+=" ");e(r)}),this.keyFactory={},this.keyFactory.pbkdf2=(e,t,r=15e4,a=32)=>{if(null==e)throw"tEnvoy Fatal Error: argument password of method keyFactory.pbkdf2 is required and does not have a default value.";if(null==t)throw"tEnvoy Fatal Error: argument salt of method keyFactory.pbkdf2 is required and does not have a default value.";return null==r&&(r=15e4),r=isNaN(parseInt(r))?15e4:parseInt(r),null==a&&(a=32),a=isNaN(parseInt(a))?32:parseInt(a),e=this.util.mixedToUint8Array(e,!1),t=this.util.mixedToUint8Array(t,!1),i.pbkdf2(e,t,r,a)},this.keyFactory.genSeedFromCredentials=(e,t,r=15e4,a=32)=>(null==e&&reject("tEnvoy Fatal Error: argument username of method keyFactory.genSeedFromCredentials is required and does not have a default value."),null==t&&reject("tEnvoy Fatal Error: argument password of method keyFactory.genSeedFromCredentials is required and does not have a default value."),null==a&&(a=32),a=isNaN(parseInt(a))?32:parseInt(a),this.keyFactory.pbkdf2(t,e,r,a)),this.keyFactory.genPGPKeys=d=>new Promise(async(e,t)=>{null==(d=null==d?{}:d).passwordProtected&&(d.passwordProtected=[]);let r,a,i,o;if(null!=d.keyArmored){let e=new tEnvoyPGPKey(d.keyArmored,null,null,[],this);var n=e.getType();"private"==n?(i=await e.getPrivateArmored(d.password),o=await e.getPublicArmored(d.password)):"public"==n?o=await e.getPublicArmored(d.password):t("tEnvoy Fatal Error: argument key of object args of method keyFactory.genPGPKeys must either be public or private. For aes keys, use keyFactory.genPGPSymmetricKey instead."),e.destroy()}else{null==d.options&&(d.options={curve:"curve25519"}),null==d.users&&null==d.options.userIds&&(d.users=[{}]),null==d.users&&null!=d.options.userIds&&(d.users=d.options.userIds),null!=d.users&&null!=d.options.userIds&&(d.options.userIds=d.options.userIds.filter(t=>null==d.users.find(e=>e.name==t.name&&e.email==t.email&&e.comment==t.comment)),d.users=d.users.concat(d.options.userIds));for(let e=0;e<d.users.length;e++){var s=d.users[e].name||"",l=d.users[e].email||"",u=d.users[e].comment||"";d.users[e]={name:s,email:l,comment:u}}d.options.userIds=d.users;n=await y.generateKey(d.options).catch(e=>{t(e)});i=this.util.fixArmor(n.privateKeyArmored),o=this.util.fixArmor(n.publicKeyArmored)}var c;a=null==d.password?(null!=i&&(r=new tEnvoyPGPKey(i,"private",d.password,d.passwordProtected,this)),new tEnvoyPGPKey(o,"public",d.password,d.passwordProtected,this)):(null!=i&&(c=await y.encrypt({message:await y.message.fromText(i),passwords:[d.password]}).catch(e=>{t(e)}),r=new tEnvoyPGPKey(this.util.fixArmor(c.data),"private",d.password,d.passwordProtected,this)),c=await y.encrypt({message:await y.message.fromText(o),passwords:[d.password]}).catch(e=>{t(e)}),new tEnvoyPGPKey(this.util.fixArmor(c.data),"public",d.password,d.passwordProtected,this)),e({privateKey:r,publicKey:a})}),this.keyFactory.genPGPSymmetricKey=a=>new Promise(async(e,t)=>{var r;null==(a=null==a?{}:a).passwordProtected&&(a.passwordProtected=[]),null==a.key&&t("tEnvoy Fatal Error: argument key of object args of method keyFactory.genPGPSymmetricKey is required and does not have a default value."),null==a.password?e(new tEnvoyPGPKey(a.key,"aes",null,a.passwordProtected,this)):(r=await y.encrypt({message:await y.message.fromText(a.key),passwords:[a.password]}).catch(e=>{t(e)}),e(new tEnvoyPGPKey(this.util.fixArmor(r.data),"aes",a.password,a.passwordProtected,this)))}),this.keyFactory.genNaClKeys=e=>{null==(e=null==e?{}:e).passwordProtected&&(e.passwordProtected=[]);let t,r,a,i,o;if(null!=e.key){if(null==e.keyType)throw"tEnvoy Fatal Error: argument keyType of object args of method keyFactory.genNaClKeys is required when using args.key and does not have a default value.";if("private"==e.keyType)t=new tEnvoyNaClKey(e.key,"private",e.password,e.passwordProtected,this),r=t.toPublic();else if("public"==e.keyType)r=new tEnvoyNaClKey(e.key,"public",e.password,e.passwordProtected,this);else if("privateSigning"==e.keyType)a=new tEnvoyNaClSigningKey(e.key,"private",e.password,e.passwordProtected,this);else{if("publicSigning"!=e.keyType)throw"tEnvoy Fatal Error: argument keyType of object args of method keyFactory.genNaClKeys must either be private, public, privateSigning, or publicSigning. For secret (or shared) keys, use keyFactory.genNaClSymmetricKey instead.";i=new tEnvoyNaClSigningKey(e.key,"public",e.password,e.passwordProtected,this)}}else o=null==e.seed?l.box.keyPair():l.box.keyPair.fromSecretKey(e.seed),t=new tEnvoyNaClKey(o.secretKey,"private",e.password,e.passwordProtected,this),r=new tEnvoyNaClKey(o.publicKey,"public",e.password,e.passwordProtected,this);return null!=t&&(e=t.genSigningKeys(e.password),a=e.privateKey,i=e.publicKey),{privateKey:t,publicKey:r,privateSigningKey:a,publicSigningKey:i}},this.keyFactory.genNaClSymmetricKey=e=>{if(null==(e=null==e?{}:e).passwordProtected&&(e.passwordProtected=[]),null==e.key)throw"tEnvoy Fatal Error: argument key of object args of method keyFactory.genNaClSymmetricKey is required and does not have a default value.";return new tEnvoyNaClKey(e.key,"secret",e.password,e.passwordProtected,this)}}function tEnvoyPGPKey(i,e="aes",r=null,a=[],t=TogaTech.tEnvoy){let o,n,s,l,u,c,d,y;let h=t,p=h.core.openpgp;if(this.destroy=(e=null)=>{e=u("destroy",e);if(!e.proceed)throw e.error;if(null!=o)for(let e=0;e<o.length;e++)o[e]=0;if(null!=n)for(let e=0;e<n.length;e++)n[e]=0;for(method in this)delete this[method]},this.toString=()=>`[tEnvoyPGPKey ${l}]`,this.getType=()=>l,this.getPasswordProtected=()=>h.util.arrayDeepCopy(s),this.setPasswordProtected=(r,e=null)=>{e=u("setPasswordProtected",e);if(!e.proceed)throw e.error;{s=[];let t=[];"private"==l?t=["destroy","getId","getPublic","encrypt","decrypt","sign","verify"]:"public"==l?t=["destroy","getId","encrypt","verify"]:"aes"==l&&(t=["destroy","encrypt","decrypt"]),null==r&&(r=[]);for(let e=0;e<r.length;e++)t.includes(r[e])&&s.push(r[e])}},this.getId=(a=null)=>new Promise(async(t,e)=>{if("private"==l||"public"==l){var r=u("getId",a);if(r.proceed){let e=await this.getPublic(y());t(e.getKeyId().toHex())}else e(r.error)}else e("tEnvoyPGPKey Fatal Error: Key does not have an asymmetric component.")}),this.getKey=(a=null)=>new Promise(async(e,t)=>{var r;"aes"==l?null==y()?e(c()):(r=u("getKey",a)).proceed?e((await p.decrypt({message:await p.message.readArmored(c()),passwords:[y()]}).catch(e=>{t(e)})).data):t(r.error):t("tEnvoyPGPKey Fatal Error: Key does not have a symmetric component.")}),this.getPrivate=(a=null)=>new Promise(async(e,t)=>{var r=await this.getPrivateArmored(a).catch(e=>{t(e)});e((await p.key.readArmored(r).catch(e=>{t(e)})).keys[0])}),this.setPrivate=(r,a=null)=>new Promise(async(e,t)=>{await this.setPrivateArmored(r.armor(),a).catch(e=>{t(e)}),e()}),this.getPrivateArmored=(a=null)=>new Promise(async(e,t)=>{var r;"private"==l?null==y()?e(c()):(r=u("getPrivate",a)).proceed?e((await p.decrypt({message:await p.message.readArmored(i),passwords:[y()]}).catch(e=>{t(e)})).data):t(r.error):t("tEnvoyPGPKey Fatal Error: Key does not have a private component.")}),this.setPrivateArmored=(i,o=null)=>new Promise(async(e,t)=>{var r,a;"private"==l?(null==i&&t("tEnvoyPGPKey Fatal Error: argument keyArmored of method setPrivateArmored is required and does not have a default value."),i=h.util.fixArmor(i),null==y()?(d(i),e()):(r=u("setPrivate",o)).proceed?(a=await p.encrypt({message:await p.message.fromText(i),passwords:[y()]}).catch(e=>{t(e)}),d(h.util.fixArmor(a.data)),e()):t(r.error)):t("tEnvoyPGPKey Fatal Error: Key does not have a private component.")}),this.getPublic=(a=null)=>new Promise(async(t,r)=>{var e=u("getPublic",a);if(e.proceed)if("private"==l){let e=await this.getPrivate(y());t(e.toPublic())}else if("public"==l){let e;e=null==y()?c():(await p.decrypt({message:await p.message.readArmored(c()),passwords:[y()]}).catch(e=>{r(e)})).data,t((await p.key.readArmored(e).catch(e=>{r(e)})).keys[0])}else r("tEnvoyPGPKey Fatal Error: Key does not have a public component.");else r(e.error)}),this.setPublic=(i,o=null)=>new Promise(async(e,t)=>{var r,a=u("setPublic",o);a.proceed?"public"==l?(null==y()?d(h.util.fixArmor(i.armor())):(r=await p.encrypt({message:await p.message.fromText(i.armor()),passwords:[y()]}).catch(e=>{t(e)}),d(h.util.fixArmor(r.data))),e()):"private"==l?t("tEnvoyPGPKey Fatal Error: Key has a public component that depends on the private component."):t("tEnvoyPGPKey Fatal Error: Key does not have a public component."):t(a.error)}),this.getPublicArmored=(a=null)=>new Promise(async(e,t)=>{let r=await this.getPublic(a).catch(e=>{t(e)});e(h.util.fixArmor(r.armor()))}),this.setPublicArmored=(a,i=null)=>new Promise(async(e,t)=>{var r;null==a?t("tEnvoyPGPKey Fatal Error: argument keyArmored of method setPublicArmored is required and does not have a default value."):(a=h.util.fixArmor(a),r=await p.key.readArmored(a).catch(e=>{t(e)}),await this.setPublic(r.keys[0],i),e())}),this.encrypt=(i,e=null)=>new Promise(async(r,a)=>{if(u("encrypt",e).proceed){let e,t;t="aes"==l?(e=await this.getKey(y()).catch(e=>{a(e)}),await p.encrypt({message:await p.message.fromText(i),passwords:[e]}).catch(e=>{a(e)})):(e=await this.getPublic(y()).catch(e=>{a(e)}),await p.encrypt({message:p.message.fromText(i),publicKeys:e}).catch(e=>{a(e)})),r(h.util.fixArmor(t.data))}}),this.decrypt=(i,t=null)=>new Promise(async(r,a)=>{var e=u("decrypt",t);if(e.proceed){i=h.util.fixArmor(i);let e,t;t="aes"==l?(e=await this.getKey(y()).catch(e=>{a(e)}),await p.decrypt({message:await p.message.readArmored(i),passwords:[e]}).catch(e=>{a(e)})):(e=await this.getPrivate(y()).catch(e=>{a(e)}),await p.decrypt({message:await p.message.readArmored(i),privateKeys:e}).catch(e=>{a(e)})),r(t.data)}else a(e.error)}),this.sign=(i,o=null)=>new Promise(async(e,t)=>{var r,a=u("sign",o);a.proceed?"aes"==l?t("tEnvoyPGPKey Fatal Error: Key does not have an asymmetric component."):(r=await this.getPrivate(y()),r=await p.sign({message:await p.cleartext.fromText(i),privateKeys:r}),e(h.util.fixArmor(r.data))):t(a.error)}),this.verify=(i,o=null)=>new Promise(async(t,e)=>{var r,a=u("verify",o);if(a.proceed)if(i=h.util.fixArmor(i),"aes"==l)e("tEnvoyPGPKey Fatal Error: Key does not have an asymmetric component.");else{r=await this.getPublic(y());let e=await p.verify({message:await p.cleartext.readArmored(i),publicKeys:r});e.signatures[0]&&e.signatures[0].valid?t({verified:!0,keyid:e.signatures[0].keyid.toHex(),signatures:e.signatures,content:i.split("\n")[3]}):t({verified:!1})}else e(a.error)}),this.toPublic=(r=null)=>new Promise(async(e,t)=>{e(new tEnvoyPGPKey(await this.getPublicArmored(r),"public",y(),s,h))}),0==i.indexOf("-----BEGIN PGP PRIVATE KEY BLOCK-----")?(l="private",i=h.util.fixArmor(i)):0==i.indexOf("-----BEGIN PGP PUBLIC KEY BLOCK-----")?(l="public",i=h.util.fixArmor(i)):0==i.indexOf("-----BEGIN PGP MESSAGE-----")?(l=e||"aes",i=h.util.fixArmor(i)):l="aes",!["public","private","aes"].includes(l))throw"tEnvoyPGPKey Fatal Error: argument type of method constructor is invalid.";{c=()=>h.util.unpack(o),d=e=>{o=h.util.pack(e)},y=()=>h.util.unpack(n),(e=>{n=h.util.pack(e)})(r),d(i),s=[];let t=[];"private"==l?t=["destroy","getId","getPublic","encrypt","decrypt","sign","verify"]:"public"==l?t=["destroy","getId","encrypt","verify"]:"aes"==l&&(t=["destroy","encrypt","decrypt"]),null==a&&(a=[]);for(let e=0;e<a.length;e++)t.includes(a[e])&&s.push(a[e]);u=(t,r)=>{if(null==y())return{proceed:!0};{let e;return"private"==l?e=["getPrivate","setPrivate","setPasswordProtected"]:"public"==l?e=["getPublic","setPublic","setPasswordProtected"]:"aes"==l&&(e=["getKey"]),e.includes(t)||s.includes(t)?null==r?{proceed:!1,error:"tEnvoyPGPKey Fatal Error: Key is password-protected for method "+t+", and no password was specified."}:h.util.compareConstant(r,y())?{proceed:!0}:{proceed:!1,error:"tEnvoyPGPKey Fatal Error: Key is password-protected for method "+t+", and an incorrect password was specified."}:{proceed:!0}}},"aes"!=l&&this.getPublic(y())}}function tEnvoyNaClKey(r,e="secret",a=null,i=[],t=TogaTech.tEnvoy){let o,n,s,l,u,c,d,y,h;let p=t,g=p.core.nacl;if(this.destroy=(e=null)=>{e=c("destroy",e);if(!e.proceed)throw e.error;if(null!=o)for(let e=0;e<o.length;e++)o[e]=0;if(null!=s)for(let e=0;e<s.length;e++)s[e]=0;for(method in this)delete this[method]},this.toString=()=>`[tEnvoyNaClKey ${u}]`,this.getType=()=>u,this.getPasswordProtected=()=>p.util.arrayDeepCopy(l),this.setPasswordProtected=(r,e=null)=>{e=c("setPasswordProtected",e);if(!e.proceed)throw e.error;{l=[];let t=[];"private"==u||"shared"==u||"secret"==u?t=["destroy","getPublic","encrypt","decrypt","encryptEphemeral","decryptEphemeral","genSigningKey","genSharedKey","sign","verify"]:"public"==u&&(t=["destroy","encrypt","genSharedKey","verify"]),null==r&&(r=[]);for(let e=0;e<r.length;e++)t.includes(r[e])&&l.push(r[e])}},this.getPrivate=(t=null)=>{var e=c("getPrivate",t);if(e.proceed){if("private"!=u&&"secret"!=u&&"shared"!=u)throw"tEnvoyNaClKey Fatal Error: Key does not have a private, secret, or shared component.";if(null==h())return d()instanceof Array||d()instanceof Uint8Array?p.util.arrayDeepCopy(d()):d();{let e=new tEnvoyNaClKey(h(),"secret",null,[],p);t=e.decrypt(d());if(e.destroy(),p.util.bytesToHex(t.nonce)==p.util.bytesToHex(n))return t.message;throw"tEnvoyNaClKey Fatal Error: The encrypted key was tampered with, and the nonce is invalid."}}throw e.error},this.setPrivate=(t,e=null)=>{e=c("setPrivate",e);if(!e.proceed)throw e.error;if(null==t)throw"tEnvoyNaClKey Fatal Error: argument privateKey of method setPrivate is required and does not have a default value.";if(32!=(t=p.util.mixedToUint8Array(t,!1)).length)throw"tEnvoyNaClKey Fatal Error: argument privateKey of method setPrivate is invalid, length should be 32 (was "+t.length+").";if("private"!=u&&"secret"!=u&&"shared"!=u)throw"tEnvoyNaClKey Fatal Error: Key does not have a private, secret, or shared component.";if(null==h())y(t);else{n=g.randomBytes(12);let e=new tEnvoyNaClKey(h(),"secret",null,[],p);y(e.encrypt(t,n)),e.destroy()}},this.getPublic=(t=null)=>{var e=c("getPublic",t);if(e.proceed){if("private"==u)return g.box.keyPair.fromSecretKey(this.getPrivate(h())).publicKey;if("public"!=u)throw"tEnvoyNaClKey Fatal Error: Key does not have a public component.";if(null==h())return p.util.arrayDeepCopy(d());{let e=new tEnvoyNaClKey(h(),"secret",null,[],p);t=e.decrypt(d());if(e.destroy(),p.util.bytesToHex(t.nonce)==p.util.bytesToHex(n))return t.message;throw"tEnvoyNaClKey Fatal Error: The encrypted key was tampered with, and the nonce is invalid."}}throw e.error},this.setPublic=(t,e=null)=>{e=c("setPublic",e);if(!e.proceed)throw e.error;if(null==t)throw"tEnvoyNaClKey Fatal Error: argument publicKey of method setPublic is required and does not have a default value.";if(32!=(t=p.util.mixedToUint8Array(t,!1)).length)throw"tEnvoyNaClKey Fatal Error: argument publicKey of method setPublic is invalid, length should be 32 (was "+t.length+").";if("private"==u)throw"tEnvoyNaClKey Fatal Error: Key has a public component that depends on the private component.";if("public"!=u)throw"tEnvoyNaClKey Fatal Error: Key does not have a public component.";if(null==h())y(t);else{n=g.randomBytes(12);let e=new tEnvoyNaClKey(h(),"secret",null,[],p);y(e.encrypt(t,n)),e.destroy()}},this.encrypt=(e,t,r=null)=>{var a=c("encrypt",r);if(a.proceed){if(null==e)throw"tEnvoyNaClKey Fatal Error: argument message of method encrypt is required and does not have a default value.";if(null==t)throw"tEnvoyNaClKey Fatal Error: argument nonce of method encrypt is required and does not have a default value.";var i=p.util.pack(e).length,r=g.randomBytes(1)[0]%16,i=32+32*parseInt(i/32);i+=r,e=p.util.pack(e,i);i=p.util.pack(t);if("shared"==u){if(i.length>g.box.nonceLength)throw"tEnvoyNaClKey Fatal Error: Nonce is too long, ensure that nonce length is under "+g.box.nonceLength+" (was "+i.length+").";t=p.util.pack(t,g.box.nonceLength)}else if("secret"==u){if(i.length>g.secretbox.nonceLength)throw"tEnvoyNaClKey Fatal Error: Nonce is too long, ensure that nonce length is under "+g.secretbox.nonceLength+" (was "+i.length+").";t=p.util.pack(t,g.secretbox.nonceLength)}if("shared"==u)return p.util.bytesToHex(t)+"::"+p.util.bytesToHex(g.box.after(e,t,this.getPrivate(h())));if("secret"==u)return p.util.bytesToHex(t)+"::"+p.util.bytesToHex(g.secretbox(e,t,p.util.pack(this.getPrivate(h()),32)));throw"tEnvoyNaClKey Fatal Error: Key cannot be used for encryption, only secret or shared keys can be used to encrypt."}throw a.error},this.decrypt=(e,t=null)=>{var r=c("decrypt",t);if(r.proceed){if(null==e)throw"tEnvoyNaClKey Fatal Error: argument encrypted of method decrypt is required and does not have a default value.";if(2!=e.split("::").length)throw"tEnvoyNaClKey Fatal Error: Invalid encrypted message.";var a=p.util.mixedToUint8Array(p.util.hexToBytes(e.split("::")[0]),!1),t=p.util.hexToBytes(e.split("::")[1]);if("shared"==u)return{message:p.util.unpack(g.box.open.after(t,a,this.getPrivate(h()))),nonce:p.util.unpack(p.util.hexToBytes(e.split("::")[0]))};if("secret"==u)return{message:p.util.unpack(g.secretbox.open(t,a,p.util.pack(this.getPrivate(h()),32))),nonce:p.util.unpack(p.util.hexToBytes(e.split("::")[0]))};throw"tEnvoyNaClKey Fatal Error: Key cannot be used for decryption, only secret or shared keys can be used to decrypt."}throw r.error},this.encryptEphemeral=(r,a,e=null)=>{e=c("encryptEphemeral",e);if(!e.proceed)throw e.error;{let t=p.keyFactory.genNaClKeys({password:h(),passwordProtected:l});if("public"==u){let e=this.genSharedKey(t.privateKey,h(),h());return e.encrypt(r,a,h())+"::"+p.util.bytesToHex(t.publicKey.getPublic(h()))}if("private"!=u)throw"tEnvoyNaClKey Fatal Error: Key cannot be used for ephemeral encryption, only public or private keys can be used to encrypt ephemerally.";{let e=this.toPublic(h()).genSharedKey(t.privateKey,h(),h());return e.encrypt(r,a,h())+"::"+p.util.bytesToHex(t.publicKey.getPublic(h()))}}},this.decryptEphemeral=(e,r=null)=>{var t=c("decryptEphemeral",r);if(t.proceed){if(null==e)throw"tEnvoyNaClKey Fatal Error: argument encryptedEphemeral of method decryptEphemeral is required and does not have a default value.";if(3!=e.split("::").length)throw"tEnvoyNaClKey Fatal Error: Invalid ephemeral encrypted message.";r=e.split("::").slice(0,2).join("::");let t=new tEnvoyNaClKey(p.util.hexToBytes(e.split("::")[2]),"public",h(),l,p);if("private"!=u)throw t.destroy(),"tEnvoyNaClKey Fatal Error: Key cannot be used for ephemeral decryption, only private keys can be used to decrypt ephemerally.";{let e=this.genSharedKey(t,h(),h());return t.destroy(),e.decrypt(r)}}throw t.error},this.genSigningKeys=(e=null)=>{var t=c("genSigningKey",e);if(t.proceed){if("secret"==u)throw"tEnvoyNaClKey Fatal Error: Secret key cannot be used to generate signing keys.";e=g.sign.keyPair.fromSeed(this.getPrivate(h()));return{privateKey:new tEnvoyNaClSigningKey(e.secretKey,"private",h(),l,p),publicKey:new tEnvoyNaClSigningKey(e.publicKey,"public",h(),l,p)}}throw t.error},this.genSharedKey=(e,t=null,r=null)=>{r=c("genSharedKey",r);if(r.proceed){if(null==e)throw"tEnvoyNaClKey Fatal Error: argument otherKey of method genSharedKey is required and does not have a default value.";if(e instanceof tEnvoyNaClKey){if("public"==u&&"private"==e.getType())return new tEnvoyNaClKey(g.box.before(this.getPublic(h()),e.getPrivate(t)),"shared",h(),l,p);if("private"!=u||"public"!=e.getType())throw"tEnvoyNaClKey Fatal Error: Incompatible key types, one key should be public, and the other should be private.";return new tEnvoyNaClKey(g.box.before(e.getPublic(t),this.getPrivate(h())),"shared",h(),l,p)}throw"tEnvoyNaClKey Fatal Error: Incompatible key types, both keys should be of type tEnvoyNaClKey."}throw r.error},this.toPublic=(e=null)=>new tEnvoyNaClKey(this.getPublic(e),"public",h(),l,p),!["public","private","secret","shared"].includes(e))throw"tEnvoyNaClKey Fatal Error: argument type of method constructor is invalid.";{if(d=()=>p.util.unpack(o),y=e=>{o=p.util.pack(e)},h=()=>p.util.unpack(s),(e=>{s=p.util.pack(e)})(a),"secret"==u&&(r=p.util.pack(r,32)),null==a)y(r);else{n=g.randomBytes(12);let e=new tEnvoyNaClKey(a,"secret",null,[],p);y(e.encrypt(r,n)),e.destroy()}u=e,l=[];let t=[];"private"==u||"shared"==u||"secret"==u?t=["destroy","getPublic","encrypt","decrypt","encryptEphemeral","decryptEphemeral","genSigningKey","genSharedKey","sign","verify"]:"public"==u&&(t=["destroy","encrypt","genSharedKey","verify"]),null==i&&(i=[]);for(let e=0;e<i.length;e++)t.includes(i[e])&&l.push(i[e]);c=(t,r=null)=>{if(null==h())return{proceed:!0};{let e;return"private"==u||"shared"==u||"secret"==u?e=["getPrivate","setPrivate","setPasswordProtected"]:"public"==u&&(e=["getPublic","setPublic","setPasswordProtected"]),e.includes(t)||l.includes(t)?null==r?{proceed:!1,error:"tEnvoyNaClKey Fatal Error: Key is password-protected for method "+t+", and no password was specified"}:p.util.compareConstant(r,h())?{proceed:!0}:{proceed:!1,error:"tEnvoyNaClKey Fatal Error: Key is password-protected for method "+t+", and an incorrect password was specified."}:{proceed:!0}}}}}function tEnvoyNaClSigningKey(r,e="secret",a=null,i=[],t=TogaTech.tEnvoy){let o,n,s,l,u,c,d,y,h;let p=t,g=p.core.nacl;if(this.destroy=(e=null)=>{e=c("destroy",e);if(!e.proceed)throw e.error;if(null!=o)for(let e=0;e<o.length;e++)o[e]=0;if(null!=s)for(let e=0;e<s.length;e++)s[e]=0;for(method in this)delete this[method]},this.toString=()=>`[tEnvoyNaClSigningKey ${u}]`,this.getType=()=>u,this.getPasswordProtected=()=>p.util.arrayDeepCopy(l),this.setPasswordProtected=(r,e=null)=>{e=c("setPasswordProtected",e);if(!e.proceed)throw e.error;{l=[];let t=[];"private"==u?t=["destroy","getPublic","sign","verify"]:"public"==u&&(t=["destroy","verify"]),null==r&&(r=[]);for(let e=0;e<r.length;e++)t.includes(r[e])&&l.push(r[e])}},this.getPrivate=(t=null)=>{var e=c("getPrivate",t);if(e.proceed){if("private"!=u)throw"tEnvoyNaClSigningKey Fatal Error: Key does not have a private component.";if(null==h())return p.util.arrayDeepCopy(d());{let e=new tEnvoyNaClKey(h(),"secret",null,[],p);t=e.decrypt(d());if(e.destroy(),p.util.bytesToHex(t.nonce)==p.util.bytesToHex(n))return t.message;throw"tEnvoyNaClSigningKey Fatal Error: The encrypted key was tampered with, and the nonce is invalid."}}throw e.error},this.setPrivate=(t,e=null)=>{e=c("setPrivate",e);if(!e.proceed)throw e.error;if(null==t)throw"tEnvoyNaClSigningKey Fatal Error: argument privateKey of method setPrivate is required and does not have a default value.";if(32!=(t=p.util.mixedToUint8Array(t,!1)).length)throw"tEnvoyNaClSigningKey Fatal Error: argument privateKey of method setPrivate is invalid, length should be 32 (was "+t.length+").";if("private"!=u)throw"tEnvoyNaClSigningKey Fatal Error: Key does not have a private component.";if(null==h())y(t);else{n=g.randomBytes(12);let e=new tEnvoyNaClKey(h(),"secret",null,[],p);y(e.encrypt(t,n)),e.destroy()}},this.getPublic=(t=null)=>{var e=c("getPublic",t);if(e.proceed){if("private"==u)return g.sign.keyPair.fromSecretKey(this.getPrivate(h())).publicKey;if("public"!=u)throw"tEnvoyNaClSigningKey Fatal Error: Key does not have a public component.";if(null==h())return p.util.arrayDeepCopy(d());{let e=new tEnvoyNaClKey(h(),"secret",null,[],p);t=e.decrypt(d());if(e.destroy(),p.util.bytesToHex(t.nonce)==p.util.bytesToHex(n))return t.message;throw"tEnvoyNaClSigningKey Fatal Error: The encrypted key was tampered with, and the nonce is invalid."}}throw e.error},this.setPublic=(t,e=null)=>{e=c("setPublic",e);if(!e.proceed)throw e.error;if(null==t)throw"tEnvoyNaClSigningKey Fatal Error: argument publicKey of method setPublic is required and does not have a default value.";if(32!=(t=p.util.mixedToUint8Array(t,!1)).length)throw"tEnvoyNaClSigningKey Fatal Error: argument publicKey of method setPublic is invalid, length should be 32 (was "+t.length+").";if("private"==u)throw"tEnvoyNaClSigningKey Fatal Error: Key has a public component that depends on the private component.";if("public"!=u)throw"tEnvoyNaClSigningKey Fatal Error: Key does not have a public component.";if(null==h())y(t);else{n=g.randomBytes(12);let e=new tEnvoyNaClKey(h(),"secret",null,[],p);y(e.encrypt(t,n)),e.destroy()}},this.sign=(e,t=null)=>{var r=c("sign",t);if(r.proceed){if(null==e)throw"tEnvoyNaClSigningKey Fatal Error: argument message of method sign is required and does not have a default value.";if("private"!=u)throw"tEnvoyNaClSigningKey Fatal Error: Key does not have a private component.";e=p.util.pack(e);t=p.util.bytesToHex(g.hash(e));return{signature:t+"::"+p.util.bytesToHex(g.sign.detached(g.hash(e),this.getPrivate(h()))),hash:t}}throw r.error},this.verify=(e,t=null)=>{var r=c("verify",t);if(r.proceed){if(null==e)throw"tEnvoyNaClSigningKey Fatal Error: argument signed of method verify is required and does not have a default value.";if(2!=e.split("::").length)throw"tEnvoyNaClSigningKey Fatal Error: Invalid signature.";var a=p.util.hexToBytes(e.split("::")[0]),t=p.util.hexToBytes(e.split("::")[1]);return{verified:g.sign.detached.verify(a,t,this.getPublic(h())),hash:e.split("::")[0]}}throw r.error},this.verifyWithMessage=(e,t,r=null)=>{if(null==e)throw"tEnvoyNaClSigningKey Fatal Error: argument signed of method verifyWithMessage is required and does not have a default value.";if(null==t)throw"tEnvoyNaClSigningKey Fatal Error: argument message of method verifyWithMessage is required and does not have a default value.";if(2!=e.split("::").length)throw"tEnvoyNaClSigningKey Fatal Error: Invalid signature.";var a=p.util.hexToBytes(e.split("::")[0]);return this.verify(e,r)&&p.util.bytesToHex(g.hash(p.util.pack(t)))==p.util.bytesToHex(a)},this.toPublic=(e=null)=>new tEnvoyNaClSigningKey(this.getPublic(e),"public",h(),l,p),!["public","private"].includes(e))throw"tEnvoyNaClSigningKey Fatal Error: argument type of method constructor is invalid.";{if(d=()=>p.util.unpack(o),y=e=>{o=p.util.pack(e)},h=()=>p.util.unpack(s),(e=>{s=p.util.pack(e)})(a),null==a)y(r);else{n=g.randomBytes(12);let e=new tEnvoyNaClKey(a,"secret",null,[],p);y(e.encrypt(r,n)),e.destroy()}u=e,l=[];let t=[];"private"==u?t=["destroy","getPublic","sign","verify"]:"public"==u&&(t=["destroy","verify"]),null==i&&(i=[]);for(let e=0;e<i.length;e++)t.includes(i[e])&&l.push(i[e]);c=(t,r=null)=>{if(null==h())return{proceed:!0};{let e;return"private"==u?e=["getPrivate","setPrivate","setPasswordProtected"]:"public"==u&&(e=["getPublic","setPublic","setPasswordProtected"]),e.includes(t)||l.includes(t)?null==r?{proceed:!1,error:"tEnvoyNaClSigningKey Fatal Error: Key is password-protected for method "+t+", and no password was specified."}:p.util.compareConstant(r,h())?{proceed:!0}:{proceed:!1,error:"tEnvoyNaClSigningKey Fatal Error: Key is password-protected for method "+t+", and an incorrect password was specified."}:{proceed:!0}}}}}TogaTech.tEnvoy=new tEnvoy(openpgp,nacl,sha256),module.exports={tEnvoy:tEnvoy,tEnvoyPGPKey:tEnvoyPGPKey,tEnvoyNaClKey:tEnvoyNaClKey,tEnvoyNaClSigningKey:tEnvoyNaClSigningKey};
//# sourceMappingURL=tenvoy.min.js.map